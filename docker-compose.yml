version: "3.5"

services:
  #Irei usar um backend em golang por ser mais simples, rapido e com menos dependencias, ja que o escopo eh pequeno
  go-form-backend:
    container_name: go-form-backend
    image: go-form-backend:1.0.0

    environment:
      - DB_HOSTNAME=db
    ports:
      - "${SERVER_PORT}:8080"
    depends_on:
      db:
        condition: service_healthy #Vai esperar ate que a db esteja pronta para uso

    restart: on-failure
    env_file: .env
    build:
      context: ./server/
      dockerfile: go.Dockerfile
    networks:
      - default
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: "250MB"

  db:
    container_name: golang-server-db
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./script.sql:/docker-entrypoint-initdb.d/script.sql #Montando o script de criacao da tabela no container
    #So para caso o servico nao esteja pronto antes de alguma requisicao
    healthcheck:
      test: pg_isready -U postgres

    deploy:
      resources:
        limits:
          cpus: "0.13"
          memory: "150MB"

    #Para o frontend irei utilizar o nextjs por pura praticidade, porem irei usar uma versao bem reduzida e leve dele https://create.t3.gg/
  nextjs-form-app:
    container_name: nextjs-form-app
    image:
      nextjs-form-app:1.0.0

      #Para esse dockerfile eu utilizei o codigo oficial da vercel sobre o nextjs(Ver o next.Dockerfile)
    build:
      context: ./frontend
      dockerfile: next.Dockerfile
    ports:
      - "3000:3000"
    env_file: .env

    networks:
      - default
    #Limitando os recursos do front ja que eh apenas um formulario que sera mostrado
    deploy:
      resources:
        limits:
          cpus: "0.17"
          memory: "150MB"

  #definindo o servico de proxy reverso para o frontend, para uma maior seguranca
  nginx:
    container_name: nginx-form-reverse-proxy
    image: nginx:latest
    ports:
      - "${REVERSE_PROXY_PORT}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro #Montando as configuracoes do nginx no container
    depends_on:
      nextjs-form-app:
        condition: service_started
      go-form-backend:
        condition: service_started
    networks:
      - default
    deploy:
      resources:
        limits:
          cpus: "0.17"
          memory: "250MB"
#Definindo a default network no nosso projeto
networks:
  default:
    driver: bridge
    name: redway-application
